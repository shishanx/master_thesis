2024-11-06 13:45:00,129   INFO  **********************Start logging**********************
2024-11-06 13:45:00,129   INFO  CUDA_VISIBLE_DEVICES=ALL
2024-11-06 13:45:00,129   INFO  cfg.ROOT_DIR: /workspace/github/PG-RCNN
2024-11-06 13:45:00,129   INFO  cfg.LOCAL_RANK: 0
2024-11-06 13:45:00,129   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2024-11-06 13:45:00,129   INFO  ----------- DATA_CONFIG -----------
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATA_PATH: data/kitti
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2024-11-06 13:45:00,129   INFO  ----------- DATA_SPLIT -----------
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2024-11-06 13:45:00,129   INFO  ----------- INFO_PATH -----------
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points', 'calib_matricies']
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2024-11-06 13:45:00,129   INFO  ----------- DATA_AUGMENTOR -----------
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling_mbm', 'USE_ROAD_PLANE': False, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:10', 'Cyclist:10'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'add_multi_best_match_cd_fix', 'CAR_MLT_BM_ROOT': 'train_mirror_target/bm_50maxdist_2num_Car', 'CYC_MLT_BM_ROOT': 'train_mirror_target/bm_5maxdist_2num_Cyclist', 'PED_MLT_BM_ROOT': 'train_mirror_target/bm_5maxdist_2num_Pedestrian', 'NUM_POINT_FEATURES': 3}, {'NAME': 'random_world_flip_mbm', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation_mbm', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling_mbm', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2024-11-06 13:45:00,129   INFO  ----------- POINT_FEATURE_ENCODING -----------
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.05, 0.05, 0.1], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2024-11-06 13:45:00,129   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: tools/cfgs/dataset_configs/kitti_dataset.yaml
2024-11-06 13:45:00,129   INFO  ----------- MODEL -----------
2024-11-06 13:45:00,129   INFO  cfg.MODEL.NAME: PGRCNN
2024-11-06 13:45:00,129   INFO  ----------- VFE -----------
2024-11-06 13:45:00,129   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2024-11-06 13:45:00,129   INFO  ----------- BACKBONE_3D -----------
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelBackBone8x
2024-11-06 13:45:00,129   INFO  ----------- MAP_TO_BEV -----------
2024-11-06 13:45:00,129   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2024-11-06 13:45:00,129   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2024-11-06 13:45:00,129   INFO  ----------- BACKBONE_2D -----------
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5, 5]
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1, 2]
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128]
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2]
2024-11-06 13:45:00,129   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128]
2024-11-06 13:45:00,129   INFO  ----------- DENSE_HEAD -----------
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2024-11-06 13:45:00,129   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2024-11-06 13:45:00,129   INFO  ----------- TARGET_ASSIGNER_CONFIG -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2024-11-06 13:45:00,130   INFO  ----------- LOSS_CONFIG -----------
2024-11-06 13:45:00,130   INFO  ----------- LOSS_WEIGHTS -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2024-11-06 13:45:00,130   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2024-11-06 13:45:00,130   INFO  ----------- ROI_HEAD -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NAME: PGRCNNHead
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.GEN_FC: [64, 64]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [128, 128]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [128, 128]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.3
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.USE_BN: False
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.BOX_EMBEDDING: False
2024-11-06 13:45:00,130   INFO  ----------- NMS_CONFIG -----------
2024-11-06 13:45:00,130   INFO  ----------- TRAIN -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2024-11-06 13:45:00,130   INFO  ----------- TEST -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.USE_FAST_NMS: False
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.SCORE_THRESH: 0.0
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 2048
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.7
2024-11-06 13:45:00,130   INFO  ----------- ROI_GRID_POOL -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.FEATURES_SOURCE: ['x_conv2', 'x_conv3', 'x_conv4']
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.PRE_MLP: True
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GRID_SIZE: 6
2024-11-06 13:45:00,130   INFO  ----------- POOL_LAYERS -----------
2024-11-06 13:45:00,130   INFO  ----------- x_conv2 -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.MLPS: [[32, 32]]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.QUERY_RANGES: [[4, 4, 4]]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.POOL_RADIUS: [0.4]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.NSAMPLE: [16]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv2.POOL_METHOD: max_pool
2024-11-06 13:45:00,130   INFO  ----------- x_conv3 -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.MLPS: [[32, 32]]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.QUERY_RANGES: [[4, 4, 4]]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.POOL_RADIUS: [0.8]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.NSAMPLE: [16]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv3.POOL_METHOD: max_pool
2024-11-06 13:45:00,130   INFO  ----------- x_conv4 -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.MLPS: [[32, 32]]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.QUERY_RANGES: [[4, 4, 4]]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.POOL_RADIUS: [1.6]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.NSAMPLE: [16]
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.POOL_LAYERS.x_conv4.POOL_METHOD: max_pool
2024-11-06 13:45:00,130   INFO  ----------- TRANSFORMER -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.TRANSFORMER.POSITIONAL_ENCODER: grid_points_corners
2024-11-06 13:45:00,130   INFO  ----------- ENCODER -----------
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.TRANSFORMER.ENCODER.NUM_FEATURES: 96
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.TRANSFORMER.ENCODER.NUM_HEADS: 4
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.TRANSFORMER.ENCODER.NUM_HIDDEN_FEATURES: 384
2024-11-06 13:45:00,130   INFO  cfg.MODEL.ROI_HEAD.TRANSFORMER.ENCODER.NUM_LAYERS: 1
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TRANSFORMER.ENCODER.DROP_PATH_RATE: 0.1
2024-11-06 13:45:00,131   INFO  ----------- POINT_FEATURE_CONFIG -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.NUM_POINTS: 1
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.POINT_FEATURE_NUM: 32
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.USE_DEPTH: True
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.USE_SCORE: True
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.SCORE_WEIGHTING: False
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.DEPTH_NORMALIZER: 70.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.XYZ_UP_LAYER: [64, 64]
2024-11-06 13:45:00,131   INFO  ----------- SA_CONFIG -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.SA_CONFIG.NPOINTS: [64, -1]
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.SA_CONFIG.RADIUS: [0.4, 100]
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.SA_CONFIG.NSAMPLE: [16, 32]
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.POINT_FEATURE_CONFIG.SA_CONFIG.MLPS: [[128, 128], [128, 256]]
2024-11-06 13:45:00,131   INFO  ----------- TARGET_CONFIG -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: roi_iou
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.75
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.25
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2024-11-06 13:45:00,131   INFO  ----------- LOSS_CONFIG -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.GRID_3D_IOU_LOSS: False
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.SAMPLE_POINTS: 2048
2024-11-06 13:45:00,131   INFO  ----------- LOSS_WEIGHTS -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.chamfer_dist_weight: 1.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_iou3d_weight: 1.0
2024-11-06 13:45:00,131   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2024-11-06 13:45:00,131   INFO  ----------- POST_PROCESSING -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.3
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2024-11-06 13:45:00,131   INFO  ----------- NMS_CONFIG -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2024-11-06 13:45:00,131   INFO  ----------- CAT_THRESH -----------
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.CAT_THRESH.Car: 0.7
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.CAT_THRESH.Ped: 0.5
2024-11-06 13:45:00,131   INFO  cfg.MODEL.POST_PROCESSING.CAT_THRESH.Cyc: 0.7
2024-11-06 13:45:00,131   INFO  ----------- OPTIMIZATION -----------
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 8
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.LR: 0.01
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2024-11-06 13:45:00,132   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2024-11-06 13:45:00,132   INFO  cfg.TAG: pgrcnn
2024-11-06 13:45:00,132   INFO  cfg.EXP_GROUP_PATH: tools/cfgs/kitti_models
2024-11-06 13:45:00,195   INFO  Database filter by min points Car: 14357 => 13532
2024-11-06 13:45:00,195   INFO  Database filter by min points Pedestrian: 2207 => 2168
2024-11-06 13:45:00,195   INFO  Database filter by min points Cyclist: 734 => 705
2024-11-06 13:45:00,203   INFO  Database filter by difficulty Car: 13532 => 10759
2024-11-06 13:45:00,205   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2024-11-06 13:45:00,205   INFO  Database filter by difficulty Cyclist: 705 => 581
2024-11-06 13:45:00,207   INFO  Loading KITTI dataset
2024-11-06 13:45:00,255   INFO  Total samples for KITTI dataset: 3712
2024-11-06 13:45:00,375   INFO  **********************model information**********************
2024-11-06 13:45:00,375   INFO  PGRCNN(
  (vfe): MeanVFE()
  (backbone_3d): VoxelBackBone8x(
    (conv_input): SparseSequential(
      (0): SubMConv3d(4, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
    (conv1): SparseSequential(
      (0): SparseSequential(
        (0): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv2): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv3): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv4): SparseSequential(
      (0): SparseSequential(
        (0): SparseConv3d(64, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[0, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): SparseSequential(
        (0): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
        (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d(64, 128, kernel_size=[3, 1, 1], stride=[2, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU()
    )
  )
  (map_to_bev_module): HeightCompression()
  (pfe): None
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
      (1): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): ReLU()
        (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (9): ReLU()
        (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (12): ReLU()
        (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): ReLU()
        (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (18): ReLU()
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
  )
  (dense_head): AnchorHeadSingle(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (dir_loss_func): WeightedCrossEntropyLoss()
    (conv_cls): Conv2d(256, 18, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(256, 42, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
  )
  (point_head): None
  (roi_head): PGRCNNHead(
    (proposal_target_layer): ProposalTargetLayer()
    (reg_loss_func): WeightedSmoothL1Loss()
    (SA_modules): ModuleList(
      (0): PointnetSAModule(
        (groupers): ModuleList(
          (0): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(67, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
      )
      (1): PointnetSAModule(
        (groupers): ModuleList(
          (0): GroupAll()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
          )
        )
      )
    )
    (roi_grid_pool_layers): ModuleList(
      (0): NeighborVoxelSAModuleMSG(
        (groupers): ModuleList(
          (0): VoxelQueryAndGrouping()
        )
        (mlps_in): ModuleList(
          (0): Sequential(
            (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_pos): ModuleList(
          (0): Sequential(
            (0): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_out): ModuleList(
          (0): Sequential(
            (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (relu): ReLU()
      )
      (1-2): 2 x NeighborVoxelSAModuleMSG(
        (groupers): ModuleList(
          (0): VoxelQueryAndGrouping()
        )
        (mlps_in): ModuleList(
          (0): Sequential(
            (0): Conv1d(64, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_pos): ModuleList(
          (0): Sequential(
            (0): Conv2d(3, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (mlps_out): ModuleList(
          (0): Sequential(
            (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (relu): ReLU()
      )
    )
    (pos_encoder): FeedForwardPositionalEncoding(
      (ffn): Sequential(
        (0): Conv1d(27, 48, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv1d(48, 96, kernel_size=(1,), stride=(1,))
      )
    )
    (attention_head): TransformerEncoder(
      (blocks): ModuleList(
        (0): Block(
          (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
          (drop_path): Identity()
          (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=96, out_features=384, bias=True)
            (act): GELU(approximate='none')
            (fc2): Linear(in_features=384, out_features=96, bias=True)
            (drop): Dropout(p=0.0, inplace=False)
          )
          (attn): Attention(
            (qkv): Linear(in_features=96, out_features=288, bias=False)
            (attn_drop): Dropout(p=0.0, inplace=False)
            (proj): Linear(in_features=96, out_features=96, bias=True)
            (proj_drop): Dropout(p=0.0, inplace=False)
          )
        )
      )
    )
    (gen_fc_layers): Sequential(
      (0): Linear(in_features=96, out_features=64, bias=False)
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
      (4): Linear(in_features=64, out_features=64, bias=False)
      (5): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
      (7): Linear(in_features=64, out_features=35, bias=True)
    )
    (point_pred_layer): Linear(in_features=32, out_features=1, bias=True)
    (xyz_up_layer): Sequential(
      (0): Conv2d(5, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
      (2): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
      (3): ReLU()
    )
    (merge_down_layer): Sequential(
      (0): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
    )
    (cls_fc_layers): Sequential(
      (0): Linear(in_features=256, out_features=128, bias=False)
      (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
      (4): Linear(in_features=128, out_features=128, bias=False)
      (5): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
    )
    (cls_pred_layer): Linear(in_features=128, out_features=1, bias=True)
    (reg_fc_layers): Sequential(
      (0): Linear(in_features=256, out_features=128, bias=False)
      (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.3, inplace=False)
      (4): Linear(in_features=128, out_features=128, bias=False)
      (5): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
    )
    (reg_pred_layer): Linear(in_features=128, out_features=7, bias=True)
    (cls_loss_func): SigmoidFocalClassificationLoss()
  )
)
2024-11-06 13:45:00,383   INFO  ==> Loading parameters from checkpoint /workspace/github/PG-RCNN/output/tools/cfgs/kitti_models/pgrcnn/default/ckpt/checkpoint_epoch_80.pth to GPU
2024-11-06 13:45:00,409   INFO  ==> Loading optimizer parameters from checkpoint /workspace/github/PG-RCNN/output/tools/cfgs/kitti_models/pgrcnn/default/ckpt/checkpoint_epoch_80.pth to GPU
2024-11-06 13:45:00,409   INFO  ==> Done
2024-11-06 13:45:00,410   INFO  **********************Start training tools/cfgs/kitti_models/pgrcnn(default)**********************
2024-11-06 13:45:01,299   INFO  0:00:00.888855
2024-11-06 13:45:01,299   INFO  **********************End training tools/cfgs/kitti_models/pgrcnn(default)**********************



